/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: release-1.16
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.coding.apiserver.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
 */
@ApiModel(description = "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-29T07:27:12.312Z[Etc/UTC]")
public class VContainerState {
  public static final String SERIALIZED_NAME_RUNNING = "running";
  @SerializedName(SERIALIZED_NAME_RUNNING)
  private VContainerStateRunning running;

  public static final String SERIALIZED_NAME_TERMINATED = "terminated";
  @SerializedName(SERIALIZED_NAME_TERMINATED)
  private VContainerStateTerminated terminated;

  public static final String SERIALIZED_NAME_WAITING = "waiting";
  @SerializedName(SERIALIZED_NAME_WAITING)
  private VContainerStateWaiting waiting;


  public VContainerState running(VContainerStateRunning running) {

    this.running = running;
    return this;
  }

   /**
   * Get running
   * @return running
  **/

  @ApiModelProperty(value = "")

  public VContainerStateRunning getRunning() {
    return running;
  }


  public void setRunning(VContainerStateRunning running) {
    this.running = running;
  }


  public VContainerState terminated(VContainerStateTerminated terminated) {

    this.terminated = terminated;
    return this;
  }

   /**
   * Get terminated
   * @return terminated
  **/

  @ApiModelProperty(value = "")

  public VContainerStateTerminated getTerminated() {
    return terminated;
  }


  public void setTerminated(VContainerStateTerminated terminated) {
    this.terminated = terminated;
  }


  public VContainerState waiting(VContainerStateWaiting waiting) {

    this.waiting = waiting;
    return this;
  }

   /**
   * Get waiting
   * @return waiting
  **/

  @ApiModelProperty(value = "")

  public VContainerStateWaiting getWaiting() {
    return waiting;
  }


  public void setWaiting(VContainerStateWaiting waiting) {
    this.waiting = waiting;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VContainerState v1ContainerState = (VContainerState) o;
    return Objects.equals(this.running, v1ContainerState.running) &&
        Objects.equals(this.terminated, v1ContainerState.terminated) &&
        Objects.equals(this.waiting, v1ContainerState.waiting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(running, terminated, waiting);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ContainerState {\n");
    sb.append("    running: ").append(toIndentedString(running)).append("\n");
    sb.append("    terminated: ").append(toIndentedString(terminated)).append("\n");
    sb.append("    waiting: ").append(toIndentedString(waiting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

